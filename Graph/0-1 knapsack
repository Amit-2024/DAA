#include<bits/stdc++.h>
//coin change problem
using namespace std;
int f(int n,int W,int wt[],int p[])
{
    int dp[n+1][W+1];
    for(int i=0;i<=W;i++)  dp[0][i]=0;
    for(int i=0;i<=n;i++)  dp[i][0]=0;
    if(n==0||W==0)
        return 0;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=W;j++)
        {
            if(wt[i-1]>j) dp[i][j]=dp[i-1][j];
            dp[i][j]=max(p[i-1]+dp[i-1][j-wt[i-1]],dp[i-1][j]);
        }
    }
    return dp[n][W];
}

int main()
{
    int W;
    cin>>W;
    int n;
    cin>>n;
    int wt[n];
    int p[n];
    for(int i=0;i<n;i++)
    {
        cin>>wt[i]>>p[i];
    }
    cout<<f(n,W,wt,p);
}


#include<bits/stdc++.h>
using namespace std;
int f(int n,int W,int wt[],int p[])
{
    if(n==0||W==0)
        return 0;
    if(wt[n-1]>W)
        return f(n-1,W,wt,p);
    return max(p[n-1]+f(n-1,W-wt[n-1],wt,p),f(n-1,W,wt,p));
}

int main()
{
    int W;
    cin>>W;
    int n;
    cin>>n;
    int wt[n];
    int p[n];
    for(int i=0;i<n;i++)
    {
        cin>>wt[i]>>p[i];
    }
    cout<<f(n,W,wt,p);
}
